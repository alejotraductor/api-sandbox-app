import { FormattedResult, IacFileData, IacFileScanResult, IacOrgSettings, ParsingResults, TestReturnValue } from './types';
import { PerformanceAnalyticsKey } from './analytics';
export declare type AsyncMeasurableMethod<ReturnValue> = (...args: unknown[]) => Promise<ReturnValue>;
export declare type MeasurableMethod<ReturnValue> = (...args: unknown[]) => ReturnValue;
export declare function asyncPerformanceAnalyticsDecorator<ReturnValue>(measurableMethod: AsyncMeasurableMethod<ReturnValue>, analyticsKey: PerformanceAnalyticsKey): (...args: unknown[]) => Promise<ReturnValue>;
export declare function performanceAnalyticsDecorator<ReturnValue>(measurableMethod: MeasurableMethod<ReturnValue>, analyticsKey: PerformanceAnalyticsKey): (...args: unknown[]) => ReturnValue;
declare const measurableInitLocalCache: (...args: unknown[]) => Promise<void>;
declare const measurableLoadFiles: (...args: unknown[]) => Promise<IacFileData[]>;
declare const measurableParseFiles: (...args: unknown[]) => Promise<ParsingResults>;
declare const measurableScanFiles: (...args: unknown[]) => Promise<IacFileScanResult[]>;
declare const measurableGetIacOrgSettings: (...args: unknown[]) => Promise<IacOrgSettings>;
declare const measurableApplyCustomSeverities: (...args: unknown[]) => Promise<IacFileScanResult[]>;
declare const measurableCleanLocalCache: (...args: unknown[]) => void;
export declare const measurableFormatScanResults: (...args: unknown[]) => FormattedResult[];
export declare const measurableLocalTest: (...args: unknown[]) => Promise<TestReturnValue>;
export { measurableInitLocalCache as initLocalCache, measurableLoadFiles as loadFiles, measurableParseFiles as parseFiles, measurableScanFiles as scanFiles, measurableGetIacOrgSettings as getIacOrgSettings, measurableApplyCustomSeverities as applyCustomSeverities, measurableFormatScanResults as formatScanResults, measurableCleanLocalCache as cleanLocalCache, measurableLocalTest as localTest, };
