{"ast":null,"code":"/** PURE_IMPORTS_START _observable_fromArray,_observable_scalar,_observable_empty,_observable_concat,_util_isScheduler PURE_IMPORTS_END */\nimport { fromArray } from '../observable/fromArray';\nimport { scalar } from '../observable/scalar';\nimport { empty } from '../observable/empty';\nimport { concat as concatStatic } from '../observable/concat';\nimport { isScheduler } from '../util/isScheduler';\nexport function endWith() {\n  var array = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    array[_i] = arguments[_i];\n  }\n\n  return function (source) {\n    var scheduler = array[array.length - 1];\n\n    if (isScheduler(scheduler)) {\n      array.pop();\n    } else {\n      scheduler = null;\n    }\n\n    var len = array.length;\n\n    if (len === 1 && !scheduler) {\n      return concatStatic(source, scalar(array[0]));\n    } else if (len > 0) {\n      return concatStatic(source, fromArray(array, scheduler));\n    } else {\n      return concatStatic(source, empty(scheduler));\n    }\n  };\n}","map":{"version":3,"sources":["../../../src/internal/operators/endWith.ts"],"names":[],"mappings":"AACA;AACA,SAAS,SAAT,QAAuB,yBAAvB;AACA,SAAS,MAAT,QAAsB,sBAAtB;AACA,SAAS,KAAT,QAAmB,qBAAnB;AACA,SAAS,MAAA,IAAA,YAAT,QAA4B,sBAA5B;AA2CA,SAAM,WAAN,QAAM,qBAAN;AAA2B,OAAA,SAAA,OAAA,GAAkC;MAAlC,KAAA,GAAA,E;;AAAA,OAAA,IAAA,EAAA,GAAA,CAAA,EAAA,EAAA,GAAA,SAAkC,CAAA,MAAlC,EAAkC,EAAA,EAAlC,EAAkC;;AAC3D;;AACE,SAAA,UAAa,MAAb,EAAoC;AACpC,QAAI,SAAA,GAAY,KAAA,CAAA,KAAU,CAAE,MAAZ,GAAY,CAAZ,CAAhB;;QACE,WAAW,CAAC,SAAD,C,EAAC;AACb,MAAA,KAAA,CAAA,GAAA;AAAM,K,MACL;AACD,MAAA,SAAA,GAAA,IAAA;AAED;;AACA,QAAI,GAAG,GAAA,KAAM,CAAA,MAAb;;QACE,GAAA,KAAO,CAAP,IAAO,CAAA,S,EAAa;AACrB,aAAA,YAAA,CAAA,MAAA,EAAA,MAAA,CAAA,KAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AAAM,K,MACL,IAAA,GAAO,GAAA,CAAP,EAAO;AACR,aAAA,YAAA,CAAA,MAAA,EAAA,SAAA,CAAA,KAAA,EAAA,SAAA,CAAA,CAAA;AAAM,KADL,MAEA;AACD,aAAA,YAAA,CAAA,MAAA,EAAA,KAAA,CAAA,SAAA,CAAA,CAAA;AACD;AACH,GAhBG","sourcesContent":["/** PURE_IMPORTS_START _observable_fromArray,_observable_scalar,_observable_empty,_observable_concat,_util_isScheduler PURE_IMPORTS_END */\nimport { fromArray } from '../observable/fromArray';\nimport { scalar } from '../observable/scalar';\nimport { empty } from '../observable/empty';\nimport { concat as concatStatic } from '../observable/concat';\nimport { isScheduler } from '../util/isScheduler';\nexport function endWith() {\n    var array = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        array[_i] = arguments[_i];\n    }\n    return function (source) {\n        var scheduler = array[array.length - 1];\n        if (isScheduler(scheduler)) {\n            array.pop();\n        }\n        else {\n            scheduler = null;\n        }\n        var len = array.length;\n        if (len === 1 && !scheduler) {\n            return concatStatic(source, scalar(array[0]));\n        }\n        else if (len > 0) {\n            return concatStatic(source, fromArray(array, scheduler));\n        }\n        else {\n            return concatStatic(source, empty(scheduler));\n        }\n    };\n}\n//# sourceMappingURL=endWith.js.map\n"]},"metadata":{},"sourceType":"module"}