{"ast":null,"code":"import _slicedToArray from \"/Users/annaortega/Documents/workspace/api-sandbox-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nexport var validateDate = function validateDate(value) {\n  if (value.indexOf(\"/\") < 0) return false;\n  var currentDate = new Date();\n\n  var _value$split = value.split(\"/\"),\n      _value$split2 = _slicedToArray(_value$split, 2),\n      month = _value$split2[0],\n      year = _value$split2[1];\n\n  if (parseInt(year, 10) < parseInt(currentDate.getUTCFullYear().toString().substring(2), 10)) {\n    return false;\n  } else if (parseInt(year, 10) === parseInt(currentDate.getUTCFullYear().toString().substring(2), 10) && parseInt(month, 10) < currentDate.getUTCMonth() + 1) {\n    return false;\n  }\n\n  return true;\n};","map":{"version":3,"sources":["/Users/annaortega/Documents/workspace/api-sandbox-app/src/utils/validateDate.ts"],"names":["validateDate","value","indexOf","currentDate","Date","split","month","year","parseInt","getUTCFullYear","toString","substring","getUTCMonth"],"mappings":";AAAA,OAAO,IAAMA,YAAY,GAAG,SAAfA,YAAe,CAACC,KAAD,EAAmB;AAC3C,MAAIA,KAAK,CAACC,OAAN,CAAc,GAAd,IAAqB,CAAzB,EAA4B,OAAO,KAAP;AAE5B,MAAMC,WAAW,GAAG,IAAIC,IAAJ,EAApB;;AAEA,qBAAsBH,KAAK,CAACI,KAAN,CAAY,GAAZ,CAAtB;AAAA;AAAA,MAAOC,KAAP;AAAA,MAAcC,IAAd;;AAEA,MACEC,QAAQ,CAACD,IAAD,EAAO,EAAP,CAAR,GACAC,QAAQ,CAACL,WAAW,CAACM,cAAZ,GAA6BC,QAA7B,GAAwCC,SAAxC,CAAkD,CAAlD,CAAD,EAAuD,EAAvD,CAFV,EAGE;AACA,WAAO,KAAP;AACD,GALD,MAKO,IACLH,QAAQ,CAACD,IAAD,EAAO,EAAP,CAAR,KACEC,QAAQ,CAACL,WAAW,CAACM,cAAZ,GAA6BC,QAA7B,GAAwCC,SAAxC,CAAkD,CAAlD,CAAD,EAAuD,EAAvD,CADV,IAEAH,QAAQ,CAACF,KAAD,EAAQ,EAAR,CAAR,GAAsBH,WAAW,CAACS,WAAZ,KAA4B,CAH7C,EAIL;AACA,WAAO,KAAP;AACD;;AAED,SAAO,IAAP;AACD,CArBI","sourcesContent":["export const validateDate = (value: string) => {\n    if (value.indexOf(\"/\") < 0) return false;\n  \n    const currentDate = new Date();\n  \n    const [month, year] = value.split(\"/\");\n  \n    if (\n      parseInt(year, 10) <\n      parseInt(currentDate.getUTCFullYear().toString().substring(2), 10)\n    ) {\n      return false;\n    } else if (\n      parseInt(year, 10) ===\n        parseInt(currentDate.getUTCFullYear().toString().substring(2), 10) &&\n      parseInt(month, 10) < currentDate.getUTCMonth() + 1\n    ) {\n      return false;\n    }\n  \n    return true;\n  };\n  "]},"metadata":{},"sourceType":"module"}