{"ast":null,"code":"/** PURE_IMPORTS_START tslib,_Subscriber,_util_tryCatch,_util_errorObject PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nimport { tryCatch } from '../util/tryCatch';\nimport { errorObject } from '../util/errorObject';\nexport function sequenceEqual(compareTo, comparor) {\n  return function (source) {\n    return source.lift(new SequenceEqualOperator(compareTo, comparor));\n  };\n}\n\nvar SequenceEqualOperator = /*@__PURE__*/function () {\n  function SequenceEqualOperator(compareTo, comparor) {\n    this.compareTo = compareTo;\n    this.comparor = comparor;\n  }\n\n  SequenceEqualOperator.prototype.call = function (subscriber, source) {\n    return source.subscribe(new SequenceEqualSubscriber(subscriber, this.compareTo, this.comparor));\n  };\n\n  return SequenceEqualOperator;\n}();\n\nexport { SequenceEqualOperator };\n\nvar SequenceEqualSubscriber = /*@__PURE__*/function (_super) {\n  tslib_1.__extends(SequenceEqualSubscriber, _super);\n\n  function SequenceEqualSubscriber(destination, compareTo, comparor) {\n    var _this = _super.call(this, destination) || this;\n\n    _this.compareTo = compareTo;\n    _this.comparor = comparor;\n    _this._a = [];\n    _this._b = [];\n    _this._oneComplete = false;\n\n    _this.add(compareTo.subscribe(new SequenceEqualCompareToSubscriber(destination, _this)));\n\n    return _this;\n  }\n\n  SequenceEqualSubscriber.prototype._next = function (value) {\n    if (this._oneComplete && this._b.length === 0) {\n      this.emit(false);\n    } else {\n      this._a.push(value);\n\n      this.checkValues();\n    }\n  };\n\n  SequenceEqualSubscriber.prototype._complete = function () {\n    if (this._oneComplete) {\n      this.emit(this._a.length === 0 && this._b.length === 0);\n    } else {\n      this._oneComplete = true;\n    }\n  };\n\n  SequenceEqualSubscriber.prototype.checkValues = function () {\n    var _c = this,\n        _a = _c._a,\n        _b = _c._b,\n        comparor = _c.comparor;\n\n    while (_a.length > 0 && _b.length > 0) {\n      var a = _a.shift();\n\n      var b = _b.shift();\n\n      var areEqual = false;\n\n      if (comparor) {\n        areEqual = tryCatch(comparor)(a, b);\n\n        if (areEqual === errorObject) {\n          this.destination.error(errorObject.e);\n        }\n      } else {\n        areEqual = a === b;\n      }\n\n      if (!areEqual) {\n        this.emit(false);\n      }\n    }\n  };\n\n  SequenceEqualSubscriber.prototype.emit = function (value) {\n    var destination = this.destination;\n    destination.next(value);\n    destination.complete();\n  };\n\n  SequenceEqualSubscriber.prototype.nextB = function (value) {\n    if (this._oneComplete && this._a.length === 0) {\n      this.emit(false);\n    } else {\n      this._b.push(value);\n\n      this.checkValues();\n    }\n  };\n\n  return SequenceEqualSubscriber;\n}(Subscriber);\n\nexport { SequenceEqualSubscriber };\n\nvar SequenceEqualCompareToSubscriber = /*@__PURE__*/function (_super) {\n  tslib_1.__extends(SequenceEqualCompareToSubscriber, _super);\n\n  function SequenceEqualCompareToSubscriber(destination, parent) {\n    var _this = _super.call(this, destination) || this;\n\n    _this.parent = parent;\n    return _this;\n  }\n\n  SequenceEqualCompareToSubscriber.prototype._next = function (value) {\n    this.parent.nextB(value);\n  };\n\n  SequenceEqualCompareToSubscriber.prototype._error = function (err) {\n    this.parent.error(err);\n  };\n\n  SequenceEqualCompareToSubscriber.prototype._complete = function () {\n    this.parent._complete();\n  };\n\n  return SequenceEqualCompareToSubscriber;\n}(Subscriber);","map":{"version":3,"sources":["../../../src/internal/operators/sequenceEqual.ts"],"names":[],"mappings":"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","sourcesContent":["/** PURE_IMPORTS_START tslib,_Subscriber,_util_tryCatch,_util_errorObject PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nimport { tryCatch } from '../util/tryCatch';\nimport { errorObject } from '../util/errorObject';\nexport function sequenceEqual(compareTo, comparor) {\n    return function (source) { return source.lift(new SequenceEqualOperator(compareTo, comparor)); };\n}\nvar SequenceEqualOperator = /*@__PURE__*/ (function () {\n    function SequenceEqualOperator(compareTo, comparor) {\n        this.compareTo = compareTo;\n        this.comparor = comparor;\n    }\n    SequenceEqualOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new SequenceEqualSubscriber(subscriber, this.compareTo, this.comparor));\n    };\n    return SequenceEqualOperator;\n}());\nexport { SequenceEqualOperator };\nvar SequenceEqualSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(SequenceEqualSubscriber, _super);\n    function SequenceEqualSubscriber(destination, compareTo, comparor) {\n        var _this = _super.call(this, destination) || this;\n        _this.compareTo = compareTo;\n        _this.comparor = comparor;\n        _this._a = [];\n        _this._b = [];\n        _this._oneComplete = false;\n        _this.add(compareTo.subscribe(new SequenceEqualCompareToSubscriber(destination, _this)));\n        return _this;\n    }\n    SequenceEqualSubscriber.prototype._next = function (value) {\n        if (this._oneComplete && this._b.length === 0) {\n            this.emit(false);\n        }\n        else {\n            this._a.push(value);\n            this.checkValues();\n        }\n    };\n    SequenceEqualSubscriber.prototype._complete = function () {\n        if (this._oneComplete) {\n            this.emit(this._a.length === 0 && this._b.length === 0);\n        }\n        else {\n            this._oneComplete = true;\n        }\n    };\n    SequenceEqualSubscriber.prototype.checkValues = function () {\n        var _c = this, _a = _c._a, _b = _c._b, comparor = _c.comparor;\n        while (_a.length > 0 && _b.length > 0) {\n            var a = _a.shift();\n            var b = _b.shift();\n            var areEqual = false;\n            if (comparor) {\n                areEqual = tryCatch(comparor)(a, b);\n                if (areEqual === errorObject) {\n                    this.destination.error(errorObject.e);\n                }\n            }\n            else {\n                areEqual = a === b;\n            }\n            if (!areEqual) {\n                this.emit(false);\n            }\n        }\n    };\n    SequenceEqualSubscriber.prototype.emit = function (value) {\n        var destination = this.destination;\n        destination.next(value);\n        destination.complete();\n    };\n    SequenceEqualSubscriber.prototype.nextB = function (value) {\n        if (this._oneComplete && this._a.length === 0) {\n            this.emit(false);\n        }\n        else {\n            this._b.push(value);\n            this.checkValues();\n        }\n    };\n    return SequenceEqualSubscriber;\n}(Subscriber));\nexport { SequenceEqualSubscriber };\nvar SequenceEqualCompareToSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(SequenceEqualCompareToSubscriber, _super);\n    function SequenceEqualCompareToSubscriber(destination, parent) {\n        var _this = _super.call(this, destination) || this;\n        _this.parent = parent;\n        return _this;\n    }\n    SequenceEqualCompareToSubscriber.prototype._next = function (value) {\n        this.parent.nextB(value);\n    };\n    SequenceEqualCompareToSubscriber.prototype._error = function (err) {\n        this.parent.error(err);\n    };\n    SequenceEqualCompareToSubscriber.prototype._complete = function () {\n        this.parent._complete();\n    };\n    return SequenceEqualCompareToSubscriber;\n}(Subscriber));\n//# sourceMappingURL=sequenceEqual.js.map\n"]},"metadata":{},"sourceType":"module"}