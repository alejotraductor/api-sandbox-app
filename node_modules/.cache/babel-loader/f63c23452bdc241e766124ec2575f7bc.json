{"ast":null,"code":"/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nexport function takeWhile(predicate) {\n  return function (source) {\n    return source.lift(new TakeWhileOperator(predicate));\n  };\n}\n\nvar TakeWhileOperator = /*@__PURE__*/function () {\n  function TakeWhileOperator(predicate) {\n    this.predicate = predicate;\n  }\n\n  TakeWhileOperator.prototype.call = function (subscriber, source) {\n    return source.subscribe(new TakeWhileSubscriber(subscriber, this.predicate));\n  };\n\n  return TakeWhileOperator;\n}();\n\nvar TakeWhileSubscriber = /*@__PURE__*/function (_super) {\n  tslib_1.__extends(TakeWhileSubscriber, _super);\n\n  function TakeWhileSubscriber(destination, predicate) {\n    var _this = _super.call(this, destination) || this;\n\n    _this.predicate = predicate;\n    _this.index = 0;\n    return _this;\n  }\n\n  TakeWhileSubscriber.prototype._next = function (value) {\n    var destination = this.destination;\n    var result;\n\n    try {\n      result = this.predicate(value, this.index++);\n    } catch (err) {\n      destination.error(err);\n      return;\n    }\n\n    this.nextOrComplete(value, result);\n  };\n\n  TakeWhileSubscriber.prototype.nextOrComplete = function (value, predicateResult) {\n    var destination = this.destination;\n\n    if (Boolean(predicateResult)) {\n      destination.next(value);\n    } else {\n      destination.complete();\n    }\n  };\n\n  return TakeWhileSubscriber;\n}(Subscriber);","map":{"version":3,"sources":["../../../src/internal/operators/takeWhile.ts"],"names":[],"mappings":";AAEA,OAAO,KAAE,OAAT,MAAqB,OAArB;AA0CA,SAAM,UAAN,QAA6B,eAA7B;AACE,OAAA,SAAO,SAAP,CAAQ,SAAR,EAAkC;AACnC,SAAA,UAAA,MAAA,EAAA;AAAA,WAAA,MAAA,CAAA,IAAA,CAAA,IAAA,iBAAA,CAAA,SAAA,CAAA,CAAA;AAAA,GAAA;AAED;;IACE,iBAAA,GAAA,aAAoB,YAA+C;AAA/C,WAAA,iBAAA,CAAA,SAAA,EAA+C;AAClE,SAAA,SAAA,GAAA,SAAA;AAED;;AACE,EAAA,iBAAa,CAAC,SAAd,CAAwB,IAAxB,GAA4B,UAAA,UAAA,EAAoB,MAApB,EAAgC;AAC7D,WAAA,MAAA,CAAA,SAAA,CAAA,IAAA,mBAAA,CAAA,UAAA,EAAA,KAAA,SAAA,CAAA,CAAA;AACH,GAFI;;AAEH,SAAA,iBAAA;AAOD,CAbsB,E;;IAae,mBAAA,GAAA,aAAA,UAAa,MAAb,EAAa;AAGhD,EAAA,OAAA,CAAA,SAAA,CAAA,mBAAA,EAAY,MAAZ;;AAAA,WAAA,mBAAA,CAEE,WAFF,EAEQ,SAFR,EAEoB;AADA,QAAA,KAAA,GAAA,MAAA,CAAA,IAAA,CAAA,IAAA,EAA+C,WAA/C,KAA+C,IAA/C;;AAHZ,IAAA,KAAA,CAAA,SAAA,GAAkB,SAAlB;;AAKP,WAAA,KAAA;AAED;;AACE,EAAA,mBAAiB,CAAA,SAAjB,CAAyB,KAAzB,GAAoC,UAAC,KAAD,EAAC;AACrC,QAAI,WAAgB,GAAA,KAAA,WAApB;AACA,QAAI,MAAJ;;QACE;AACD,MAAA,MAAA,GAAA,KAAA,SAAA,CAAA,KAAA,EAAA,KAAA,KAAA,EAAA,CAAA;AAAC,K,CACA,OAAA,GAAA,EAAA;AACA,MAAA,WAAO,CAAA,KAAP,CAAO,GAAP;AACD;AACD;;AACD,SAAA,cAAA,CAAA,KAAA,EAAA,MAAA;AAED,GAXE;;AAYA,EAAA,mBAAiB,CAAA,SAAjB,CAAyB,cAAzB,GAAqC,UAAA,KAAA,EAAA,eAAA,EAAA;AACrC,QAAI,WAAQ,GAAA,KAAA,WAAZ;;QACE,OAAA,CAAA,eAAA,C,EAAwB;AACzB,MAAA,WAAA,CAAA,IAAA,CAAA,KAAA;AAAM,K,MACL;AACD,MAAA,WAAA,CAAA,QAAA;AACF;AACH,GAPI;;AArBiC,SAAA,mBAAA;CAAA,C,UAAA,C","sourcesContent":["/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nexport function takeWhile(predicate) {\n    return function (source) { return source.lift(new TakeWhileOperator(predicate)); };\n}\nvar TakeWhileOperator = /*@__PURE__*/ (function () {\n    function TakeWhileOperator(predicate) {\n        this.predicate = predicate;\n    }\n    TakeWhileOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new TakeWhileSubscriber(subscriber, this.predicate));\n    };\n    return TakeWhileOperator;\n}());\nvar TakeWhileSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(TakeWhileSubscriber, _super);\n    function TakeWhileSubscriber(destination, predicate) {\n        var _this = _super.call(this, destination) || this;\n        _this.predicate = predicate;\n        _this.index = 0;\n        return _this;\n    }\n    TakeWhileSubscriber.prototype._next = function (value) {\n        var destination = this.destination;\n        var result;\n        try {\n            result = this.predicate(value, this.index++);\n        }\n        catch (err) {\n            destination.error(err);\n            return;\n        }\n        this.nextOrComplete(value, result);\n    };\n    TakeWhileSubscriber.prototype.nextOrComplete = function (value, predicateResult) {\n        var destination = this.destination;\n        if (Boolean(predicateResult)) {\n            destination.next(value);\n        }\n        else {\n            destination.complete();\n        }\n    };\n    return TakeWhileSubscriber;\n}(Subscriber));\n//# sourceMappingURL=takeWhile.js.map\n"]},"metadata":{},"sourceType":"module"}