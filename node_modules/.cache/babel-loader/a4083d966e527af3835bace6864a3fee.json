{"ast":null,"code":"/** PURE_IMPORTS_START _scan,_takeLast,_defaultIfEmpty,_util_pipe PURE_IMPORTS_END */\nimport { scan } from './scan';\nimport { takeLast } from './takeLast';\nimport { defaultIfEmpty } from './defaultIfEmpty';\nimport { pipe } from '../util/pipe';\nexport function reduce(accumulator, seed) {\n  if (arguments.length >= 2) {\n    return function reduceOperatorFunctionWithSeed(source) {\n      return pipe(scan(accumulator, seed), takeLast(1), defaultIfEmpty(seed))(source);\n    };\n  }\n\n  return function reduceOperatorFunction(source) {\n    return pipe(scan(function (acc, value, index) {\n      return accumulator(acc, value, index + 1);\n    }), takeLast(1))(source);\n  };\n}","map":{"version":3,"sources":["../../../src/internal/operators/reduce.ts"],"names":[],"mappings":"AACA;AACA,SAAS,IAAT,QAAmB,QAAnB;AACA,SAAS,QAAT,QAAyB,YAAzB;AAEA,SAAS,cAAT,QAAqB,kBAArB;AAwDA,SAAM,IAAN,QAAM,cAAN;AAME,OAAA,SAAI,MAAJ,CAAc,WAAd,EAA2B,IAA3B,EAA2B;MACzB,SAAO,CAAA,MAAP,IAAO,C,EAAA;AACL,WAAA,SAAY,8BAAZ,CAAqC,MAArC,EAAkD;AAClD,aAAA,IAAA,CAAA,IAAA,CAAA,WAAA,EAAA,IAAA,CAAA,EAAA,QAAA,CAAA,CAAA,CAAA,EAAA,cAAA,CAAA,IAAA,CAAA,CAAA,CAAA,MAAA,CAAA;AACH,KAFG;AAGJ;;AACE,SAAA,SAAY,sBAAZ,CAAiC,MAAjC,EAAwC;AACtC,WAAA,IAAO,CAAA,IAAA,CAAA,UAAkB,GAAlB,EAAoB,KAApB,EAA2B,KAA3B,EAAsC;AAC3C,aAAA,WAAa,CAAM,GAAN,EAAyB,KAAzB,EAAyB,KAAA,GAAA,CAAzB,CAAb;AACJ,KAFS,CAAA,EAET,QAAA,CAAA,CAAA,CAFS,CAAP,CAEF,MAFE,CAAA;AAGL,GAJG","sourcesContent":["/** PURE_IMPORTS_START _scan,_takeLast,_defaultIfEmpty,_util_pipe PURE_IMPORTS_END */\nimport { scan } from './scan';\nimport { takeLast } from './takeLast';\nimport { defaultIfEmpty } from './defaultIfEmpty';\nimport { pipe } from '../util/pipe';\nexport function reduce(accumulator, seed) {\n    if (arguments.length >= 2) {\n        return function reduceOperatorFunctionWithSeed(source) {\n            return pipe(scan(accumulator, seed), takeLast(1), defaultIfEmpty(seed))(source);\n        };\n    }\n    return function reduceOperatorFunction(source) {\n        return pipe(scan(function (acc, value, index) {\n            return accumulator(acc, value, index + 1);\n        }), takeLast(1))(source);\n    };\n}\n//# sourceMappingURL=reduce.js.map\n"]},"metadata":{},"sourceType":"module"}