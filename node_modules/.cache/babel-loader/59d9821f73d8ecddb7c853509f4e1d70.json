{"ast":null,"code":"/** PURE_IMPORTS_START tslib,_util_tryCatch,_util_errorObject,_util_subscribeToResult,_OuterSubscriber PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { tryCatch } from '../util/tryCatch';\nimport { errorObject } from '../util/errorObject';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OuterSubscriber } from '../OuterSubscriber';\nexport function mergeScan(accumulator, seed, concurrent) {\n  if (concurrent === void 0) {\n    concurrent = Number.POSITIVE_INFINITY;\n  }\n\n  return function (source) {\n    return source.lift(new MergeScanOperator(accumulator, seed, concurrent));\n  };\n}\n\nvar MergeScanOperator = /*@__PURE__*/function () {\n  function MergeScanOperator(accumulator, seed, concurrent) {\n    this.accumulator = accumulator;\n    this.seed = seed;\n    this.concurrent = concurrent;\n  }\n\n  MergeScanOperator.prototype.call = function (subscriber, source) {\n    return source.subscribe(new MergeScanSubscriber(subscriber, this.accumulator, this.seed, this.concurrent));\n  };\n\n  return MergeScanOperator;\n}();\n\nexport { MergeScanOperator };\n\nvar MergeScanSubscriber = /*@__PURE__*/function (_super) {\n  tslib_1.__extends(MergeScanSubscriber, _super);\n\n  function MergeScanSubscriber(destination, accumulator, acc, concurrent) {\n    var _this = _super.call(this, destination) || this;\n\n    _this.accumulator = accumulator;\n    _this.acc = acc;\n    _this.concurrent = concurrent;\n    _this.hasValue = false;\n    _this.hasCompleted = false;\n    _this.buffer = [];\n    _this.active = 0;\n    _this.index = 0;\n    return _this;\n  }\n\n  MergeScanSubscriber.prototype._next = function (value) {\n    if (this.active < this.concurrent) {\n      var index = this.index++;\n      var ish = tryCatch(this.accumulator)(this.acc, value);\n      var destination = this.destination;\n\n      if (ish === errorObject) {\n        destination.error(errorObject.e);\n      } else {\n        this.active++;\n\n        this._innerSub(ish, value, index);\n      }\n    } else {\n      this.buffer.push(value);\n    }\n  };\n\n  MergeScanSubscriber.prototype._innerSub = function (ish, value, index) {\n    this.add(subscribeToResult(this, ish, value, index));\n  };\n\n  MergeScanSubscriber.prototype._complete = function () {\n    this.hasCompleted = true;\n\n    if (this.active === 0 && this.buffer.length === 0) {\n      if (this.hasValue === false) {\n        this.destination.next(this.acc);\n      }\n\n      this.destination.complete();\n    }\n  };\n\n  MergeScanSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n    var destination = this.destination;\n    this.acc = innerValue;\n    this.hasValue = true;\n    destination.next(innerValue);\n  };\n\n  MergeScanSubscriber.prototype.notifyComplete = function (innerSub) {\n    var buffer = this.buffer;\n    this.remove(innerSub);\n    this.active--;\n\n    if (buffer.length > 0) {\n      this._next(buffer.shift());\n    } else if (this.active === 0 && this.hasCompleted) {\n      if (this.hasValue === false) {\n        this.destination.next(this.acc);\n      }\n\n      this.destination.complete();\n    }\n  };\n\n  return MergeScanSubscriber;\n}(OuterSubscriber);\n\nexport { MergeScanSubscriber };","map":{"version":3,"sources":["../../../src/internal/operators/mergeScan.ts"],"names":[],"mappings":";AAIA,OAAO,KAAE,OAAT,MAAyB,OAAzB;AACA,SAAS,QAAT,QAAsB,kBAAtB;AACA,SAAS,WAAT,QAA4B,qBAA5B;AACA,SAAS,iBAAT,QAAgC,2BAAhC;AAwCA,SAAM,eAAN,QAAgC,oBAAhC;AAEgC,OAAA,SAAA,SAAA,CAAA,WAAA,EAAA,IAAA,EAAA,UAAA,EAA4B;AAC1D,MAAA,UAAO,KAAC,KAAqB,CAA7B,EAAkC;AACnC,IAAA,UAAA,GAAA,MAAA,CAAA,iBAAA;AAED;;AACE,SAAA,UAAA,MAAA,EAAA;AAAoB,WAAA,MACA,CAAA,IADA,CAEA,IAAA,iBAAA,CAAkB,WAAlB,EAAkB,IAAlB,EAAkB,UAAlB,CAFA,CAAA;AAEkB,GAFtC;AAAoB;;IACA,iBAAA,GAAI,aAAG,YAAA;AACP,WAAA,iBAAA,CAAA,WAAA,EAAkB,IAAlB,EAAkB,UAAlB,EAAkB;AACrC,SAAA,WAAA,GAAA,WAAA;AAED,SAAA,IAAA,GAAA,IAAA;AACE,SAAA,UAAA,GAAc,UAAd;AAGD;;AACH,EAAA,iBAAA,CAAA,SAAA,CAAC,IAAD,GAAC,UAAA,UAAA,EAAA,MAAA,EAAA;AAAA,WAAA,MAAA,CAAA,SAAA,CAAA,IAAA,mBAAA,CAAA,UAAA,EAAA,KAAA,WAAA,EAAA,KAAA,IAAA,EAAA,KAAA,UAAA,CAAA,CAAA;GAAD;;AAOA,SAAA,iBAAA;AAA+C,CAhBlB,E;;AAuB3B,SAAA,iBAAA;;IAAA,mBAIE,GAAA,aAAM,UAAY,MAAZ,EACP;AAJmB,EAAA,OAAA,CAAA,SAAA,CAAA,mBAAA,EAAqD,MAArD;;AACA,WAAA,mBAAA,CAAM,WAAN,EAAM,WAAN,EAAM,GAAN,EAAM,UAAN,EAAM;AACN,QAAA,KAAA,GAAA,MAAU,CAAV,IAAA,CAAA,IAAA,EAAkB,WAAlB,KAAkB,IAAlB;;AATZ,IAAA,KAAA,CAAA,WAAA,GAAoB,WAApB;AACA,IAAA,KAAA,CAAA,GAAA,GAAA,GAAA;AACA,IAAA,KAAA,CAAA,UAAA,GAA+B,UAA/B;AACA,IAAA,KAAA,CAAA,QAAA,GAAmB,KAAnB;AACE,IAAA,KAAA,CAAA,YAAA,GAAkB,KAAlB;;AAOT,IAAA,KAAA,CAAA,MAAA,GAAA,CAAA;AAES,IAAA,KAAA,CAAA,KAAA,GAAV,CAAU;AACR,WAAI,KAAJ;AACE;;AACA,EAAA,mBAAY,CAAA,SAAZ,CAAqB,KAArB,GAA0B,UAAa,KAAb,EAAuB;QACjD,KAAM,MAAN,GAAM,KAAc,U,EAAK;AACzB,UAAI,KAAG,GAAK,KAAA,KAAA,EAAZ;UACE,GAAA,GAAA,QAAY,CAAA,KAAM,WAAN,CAAZ,CAAiC,KAAA,GAAjC,EAAiC,KAAjC,C;AACD,UAAA,WAAA,GAAA,KAAA,WAAA;;UAAM,GAAA,KAAA,W,EAAA;AACL,QAAA,WAAW,CAAA,KAAX,CAAc,WAAA,CAAA,CAAd;AACA,O,MACD;AACF,aAAA,MAAA;;AAAM,aAAA,SAAA,CAAA,GAAA,EAAA,KAAA,EAAA,KAAA;AACL;AACD,K,MACF;AAEO,WAAA,MAAA,CAAA,IAAA,CAAR,KAAQ;AACN;AACD,GAfG;;AAiBM,EAAA,mBAAA,CAAA,SAAA,CAAA,SAAA,GAAV,UAAA,GAAA,EAAA,KAAA,EAAA,KAAA,EAAA;AACE,SAAK,GAAL,CAAK,iBAAoB,CAAA,IAAA,EAAA,GAAA,EAAA,KAAA,EAAA,KAAA,CAAzB;AACA,GAFQ;;AAGN,EAAA,mBAAS,CAAA,SAAT,CAAsB,SAAtB,GAA6B,YAAA;SAC3B,Y,GAAK,I;;QACN,KAAA,MAAA,KAAA,CAAA,IAAA,KAAA,MAAA,CAAA,MAAA,KAAA,C,EAAA;AACD,UAAI,KAAC,QAAD,KAAa,KAAjB,EAA4B;AAC7B,aAAA,WAAA,CAAA,IAAA,CAAA,KAAA,GAAA;AACF;;AAED,WAAA,WAAA,CAAA,QAAA;AAGU;AACR,GAXE;;AAYF,EAAA,mBAAa,CAAG,SAAhB,CAAqB,UAArB,GAAqB,UAAA,UAAA,EAAA,UAAA,EAAA,UAAA,EAAA,UAAA,EAAA,QAAA,EAAA;AACrB,QAAA,WAAY,GAAK,KAAA,WAAjB;AACD,SAAA,GAAA,GAAA,UAAA;AAED,SAAA,QAAA,GAAA,IAAA;AACE,IAAA,WAAY,CAAA,IAAZ,CAAmB,UAAnB;AACA,GANA;;AAOA,EAAA,mBAAc,CAAA,SAAd,CAAc,cAAd,GAAc,UAAA,QAAA,EAAA;AACd,QAAI,MAAM,GAAC,KAAM,MAAjB;AACE,SAAA,MAAA,CAAK,QAAL;AACD,SAAA,MAAA;;QAAM,MAAI,CAAA,MAAJ,GAAe,C,EAAA;AACpB,WAAI,KAAJ,CAAS,MAAQ,CAAA,KAAR,EAAT;AACE,K,MACD,IAAA,KAAA,MAAA,KAAA,CAAA,IAAA,KAAA,YAAA,EAAA;AACD,UAAI,KAAC,QAAD,KAAa,KAAjB,EAA4B;AAC7B,aAAA,WAAA,CAAA,IAAA,CAAA,KAAA,GAAA;AACF;;AACH,WAAA,WAAA,CAAA,QAAA;AAlE+C;GAwD3C;;;CA7CM,C,eAAA,C","sourcesContent":["/** PURE_IMPORTS_START tslib,_util_tryCatch,_util_errorObject,_util_subscribeToResult,_OuterSubscriber PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { tryCatch } from '../util/tryCatch';\nimport { errorObject } from '../util/errorObject';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OuterSubscriber } from '../OuterSubscriber';\nexport function mergeScan(accumulator, seed, concurrent) {\n    if (concurrent === void 0) {\n        concurrent = Number.POSITIVE_INFINITY;\n    }\n    return function (source) { return source.lift(new MergeScanOperator(accumulator, seed, concurrent)); };\n}\nvar MergeScanOperator = /*@__PURE__*/ (function () {\n    function MergeScanOperator(accumulator, seed, concurrent) {\n        this.accumulator = accumulator;\n        this.seed = seed;\n        this.concurrent = concurrent;\n    }\n    MergeScanOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new MergeScanSubscriber(subscriber, this.accumulator, this.seed, this.concurrent));\n    };\n    return MergeScanOperator;\n}());\nexport { MergeScanOperator };\nvar MergeScanSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(MergeScanSubscriber, _super);\n    function MergeScanSubscriber(destination, accumulator, acc, concurrent) {\n        var _this = _super.call(this, destination) || this;\n        _this.accumulator = accumulator;\n        _this.acc = acc;\n        _this.concurrent = concurrent;\n        _this.hasValue = false;\n        _this.hasCompleted = false;\n        _this.buffer = [];\n        _this.active = 0;\n        _this.index = 0;\n        return _this;\n    }\n    MergeScanSubscriber.prototype._next = function (value) {\n        if (this.active < this.concurrent) {\n            var index = this.index++;\n            var ish = tryCatch(this.accumulator)(this.acc, value);\n            var destination = this.destination;\n            if (ish === errorObject) {\n                destination.error(errorObject.e);\n            }\n            else {\n                this.active++;\n                this._innerSub(ish, value, index);\n            }\n        }\n        else {\n            this.buffer.push(value);\n        }\n    };\n    MergeScanSubscriber.prototype._innerSub = function (ish, value, index) {\n        this.add(subscribeToResult(this, ish, value, index));\n    };\n    MergeScanSubscriber.prototype._complete = function () {\n        this.hasCompleted = true;\n        if (this.active === 0 && this.buffer.length === 0) {\n            if (this.hasValue === false) {\n                this.destination.next(this.acc);\n            }\n            this.destination.complete();\n        }\n    };\n    MergeScanSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        var destination = this.destination;\n        this.acc = innerValue;\n        this.hasValue = true;\n        destination.next(innerValue);\n    };\n    MergeScanSubscriber.prototype.notifyComplete = function (innerSub) {\n        var buffer = this.buffer;\n        this.remove(innerSub);\n        this.active--;\n        if (buffer.length > 0) {\n            this._next(buffer.shift());\n        }\n        else if (this.active === 0 && this.hasCompleted) {\n            if (this.hasValue === false) {\n                this.destination.next(this.acc);\n            }\n            this.destination.complete();\n        }\n    };\n    return MergeScanSubscriber;\n}(OuterSubscriber));\nexport { MergeScanSubscriber };\n//# sourceMappingURL=mergeScan.js.map\n"]},"metadata":{},"sourceType":"module"}