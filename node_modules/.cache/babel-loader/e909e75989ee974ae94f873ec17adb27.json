{"ast":null,"code":"/** PURE_IMPORTS_START _ReplaySubject PURE_IMPORTS_END */\nimport { ReplaySubject } from '../ReplaySubject';\nexport function shareReplay(bufferSize, windowTime, scheduler) {\n  return function (source) {\n    return source.lift(shareReplayOperator(bufferSize, windowTime, scheduler));\n  };\n}\n\nfunction shareReplayOperator(bufferSize, windowTime, scheduler) {\n  var subject;\n  var refCount = 0;\n  var subscription;\n  var hasError = false;\n  var isComplete = false;\n  return function shareReplayOperation(source) {\n    refCount++;\n\n    if (!subject || hasError) {\n      hasError = false;\n      subject = new ReplaySubject(bufferSize, windowTime, scheduler);\n      subscription = source.subscribe({\n        next: function next(value) {\n          subject.next(value);\n        },\n        error: function error(err) {\n          hasError = true;\n          subject.error(err);\n        },\n        complete: function complete() {\n          isComplete = true;\n          subject.complete();\n        }\n      });\n    }\n\n    var innerSub = subject.subscribe(this);\n    return function () {\n      refCount--;\n      innerSub.unsubscribe();\n\n      if (subscription && refCount === 0 && isComplete) {\n        subscription.unsubscribe();\n      }\n    };\n  };\n}","map":{"version":3,"sources":["../../../src/internal/operators/shareReplay.ts"],"names":[],"mappings":"AACA;AASA,SAAM,aAAN,QAA+B,kBAA/B;AACE,OAAA,SAAO,WAAP,CAA6B,UAA7B,EAAkC,UAAlC,EAA8C,SAA9C,EAAkC;AACnC,SAAA,UAAA,MAAA,EAAA;AAAA,WAAA,MAAA,CAAA,IAAA,CAAA,mBAAA,CAAA,UAAA,EAAA,UAAA,EAAA,SAAA,CAAA,CAAA;AAAA,GAAA;AAED;;AACE,SAAI,mBAAJ,CAA8B,UAA9B,EAA8B,UAA9B,EAA8B,SAA9B,EAA8B;AAC9B,MAAI,OAAJ;AACA,MAAI,QAAA,GAAA,CAAJ;AACA,MAAI,YAAJ;AACA,MAAI,QAAA,GAAU,KAAd;AAEA,MAAA,UAAO,GAAA,KAAP;AACE,SAAA,SAAW,oBAAX,CAAW,MAAX,EAAW;AACX,IAAA,QAAK;;QACH,CAAA,OAAA,IAAW,Q,EAAM;AACjB,MAAA,QAAO,GAAG,KAAV;AACA,MAAA,OAAA,GAAA,IAAY,aAAZ,CAAsB,UAAtB,EAAgC,UAAhC,EAAgC,SAAhC,CAAA;AACE,MAAA,YAAI,GAAA,MAAC,CAAA,SAAD,CAAU;AACd,QAAA,IAAA,EAAK,cAAA,KAAA,EAAI;AAAA,UAAA,OAAA,CAAA,IAAA,CAAA,KAAA;AAAA,SADK;AAEZ,QAAA,KAAA,EAAA,eAAW,GAAX,EAAgB;AAChB,UAAA,QAAQ,GAAA,IAAR;AACD,UAAA,OAAA,CAAA,KAAA,CAAA,GAAA;AACD,SALc;AAMZ,QAAA,QAAA,EAAA,oBAAkB;AAClB,UAAA,UAAQ,GAAA,IAAR;AACD,UAAA,OAAA,CAAA,QAAA;AACA;AATa,OAAV,CAAJ;AAYJ;;AAEA,QAAA,QAAO,GAAA,OAAA,CAAA,SAAA,CAAA,IAAA,CAAP;AACE,WAAA,YAAW;AACX,MAAA,QAAQ;AACR,MAAA,QAAI,CAAA,WAAJ;;UACE,YAAY,IAAC,QAAW,KAAG,CAA3B,IAA2B,U,EAAA;AAC5B,QAAA,YAAA,CAAA,WAAA;AACD;AACF,KANE;AAOL,GA3BG","sourcesContent":["/** PURE_IMPORTS_START _ReplaySubject PURE_IMPORTS_END */\nimport { ReplaySubject } from '../ReplaySubject';\nexport function shareReplay(bufferSize, windowTime, scheduler) {\n    return function (source) { return source.lift(shareReplayOperator(bufferSize, windowTime, scheduler)); };\n}\nfunction shareReplayOperator(bufferSize, windowTime, scheduler) {\n    var subject;\n    var refCount = 0;\n    var subscription;\n    var hasError = false;\n    var isComplete = false;\n    return function shareReplayOperation(source) {\n        refCount++;\n        if (!subject || hasError) {\n            hasError = false;\n            subject = new ReplaySubject(bufferSize, windowTime, scheduler);\n            subscription = source.subscribe({\n                next: function (value) { subject.next(value); },\n                error: function (err) {\n                    hasError = true;\n                    subject.error(err);\n                },\n                complete: function () {\n                    isComplete = true;\n                    subject.complete();\n                },\n            });\n        }\n        var innerSub = subject.subscribe(this);\n        return function () {\n            refCount--;\n            innerSub.unsubscribe();\n            if (subscription && refCount === 0 && isComplete) {\n                subscription.unsubscribe();\n            }\n        };\n    };\n}\n//# sourceMappingURL=shareReplay.js.map\n"]},"metadata":{},"sourceType":"module"}