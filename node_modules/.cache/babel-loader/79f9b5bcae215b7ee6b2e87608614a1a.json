{"ast":null,"code":"/** PURE_IMPORTS_START tslib,_Subscriber,_util_tryCatch,_util_errorObject PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nimport { tryCatch } from '../util/tryCatch';\nimport { errorObject } from '../util/errorObject';\nexport function distinctUntilChanged(compare, keySelector) {\n  return function (source) {\n    return source.lift(new DistinctUntilChangedOperator(compare, keySelector));\n  };\n}\n\nvar DistinctUntilChangedOperator = /*@__PURE__*/function () {\n  function DistinctUntilChangedOperator(compare, keySelector) {\n    this.compare = compare;\n    this.keySelector = keySelector;\n  }\n\n  DistinctUntilChangedOperator.prototype.call = function (subscriber, source) {\n    return source.subscribe(new DistinctUntilChangedSubscriber(subscriber, this.compare, this.keySelector));\n  };\n\n  return DistinctUntilChangedOperator;\n}();\n\nvar DistinctUntilChangedSubscriber = /*@__PURE__*/function (_super) {\n  tslib_1.__extends(DistinctUntilChangedSubscriber, _super);\n\n  function DistinctUntilChangedSubscriber(destination, compare, keySelector) {\n    var _this = _super.call(this, destination) || this;\n\n    _this.keySelector = keySelector;\n    _this.hasKey = false;\n\n    if (typeof compare === 'function') {\n      _this.compare = compare;\n    }\n\n    return _this;\n  }\n\n  DistinctUntilChangedSubscriber.prototype.compare = function (x, y) {\n    return x === y;\n  };\n\n  DistinctUntilChangedSubscriber.prototype._next = function (value) {\n    var keySelector = this.keySelector;\n    var key = value;\n\n    if (keySelector) {\n      key = tryCatch(this.keySelector)(value);\n\n      if (key === errorObject) {\n        return this.destination.error(errorObject.e);\n      }\n    }\n\n    var result = false;\n\n    if (this.hasKey) {\n      result = tryCatch(this.compare)(this.key, key);\n\n      if (result === errorObject) {\n        return this.destination.error(errorObject.e);\n      }\n    } else {\n      this.hasKey = true;\n    }\n\n    if (Boolean(result) === false) {\n      this.key = key;\n      this.destination.next(value);\n    }\n  };\n\n  return DistinctUntilChangedSubscriber;\n}(Subscriber);","map":{"version":3,"sources":["../../../src/internal/operators/distinctUntilChanged.ts"],"names":[],"mappings":";AACA,OAAO,KAAE,OAAT,MAAqB,OAArB;AACA,SAAS,UAAT,QAAyB,eAAzB;AACA,SAAS,QAAT,QAAsB,kBAAtB;AAwDA,SAAM,WAAN,QAAM,qBAAN;AACE,OAAA,SAAO,oBAAP,CAAkC,OAAlC,EAAyC,WAAzC,EAAkC;AACnC,SAAA,UAAA,MAAA,EAAA;AAAA,WAAA,MAAA,CAAA,IAAA,CAAA,IAAA,4BAAA,CAAA,OAAA,EAAA,WAAA,CAAA,CAAA;AAAA,GAAA;AAED;;IACE,4BAAA,GAAA,aAAoD,YACR;AADxB,WAAA,4BAAA,CAAgC,OAAhC,EAAgC,WAAhC,EAAgC;AAChC,SAAA,OAAA,GAAA,OAAA;AACnB,SAAA,WAAA,GAAA,WAAA;AAED;;AACE,EAAA,4BAAwB,CAAA,SAAxB,CAA4B,IAA5B,GAA4B,UAAA,UAAA,EAA+B,MAA/B,EAA2C;AACxE,WAAA,MAAA,CAAA,SAAA,CAAA,IAAA,8BAAA,CAAA,UAAA,EAAA,KAAA,OAAA,EAAA,KAAA,WAAA,CAAA,CAAA;AACH,GAFI;;AAEH,SAAA,4BAAA;AAOD,CAdsD,E;;IAcH,8BAAA,GAAA,aAAA,UAAa,MAAb,EAAa;AAI9D,EAAA,OAAA,CAAA,SAAA,CAAA,8BAAA,EAAY,MAAZ;;AAAA,WAAA,8BAAA,CAGQ,WAHR,EAGoB,OAHpB,EAOC,WAPD,EAOC;AALmB,QAAA,KAAA,GAAA,MAAW,CAAX,IAAA,CAAA,IAAA,EAAA,WAAA,KAAwB,IAAxB;;AAJZ,IAAA,KAAA,CAAA,WAAA,GAAuB,WAAvB;AAMN,IAAA,KAAI,CAAA,MAAJ,GAAW,KAAX;;QACE,OAAK,OAAL,KAAe,U,EAAQ;AACxB,MAAA,KAAA,CAAA,OAAA,GAAA,OAAA;;;AACF,WAAA,KAAA;AAED;;AACE,EAAA,8BAAe,CAAA,SAAf,CAAe,OAAf,GAAe,UAAA,CAAA,EAAA,CAAA,EAAA;AAChB,WAAA,CAAA,KAAA,CAAA;AAED,GAHE;;AAKA,EAAA,8BAAyB,CAAA,SAAzB,CAAqC,KAArC,GAAqC,UAAA,KAAA,EAAA;AACrC,QAAI,WAAgB,GAAC,KAAA,WAArB;AAEA,QAAI,GAAA,GAAA,KAAJ;;QACE,W,EAAM;AACN,MAAA,GAAA,GAAI,QAAQ,CAAA,KAAA,WAAA,CAAR,CAAqB,KAArB,CAAJ;;UACE,GAAA,KAAO,W,EAAK;AACb,eAAA,KAAA,WAAA,CAAA,KAAA,CAAA,WAAA,CAAA,CAAA,CAAA;AACF;AAED;;AAEA,QAAI,MAAK,GAAA,KAAT;;QACE,KAAA,M,EAAS;AACT,MAAA,MAAI,GAAA,QAAW,CAAA,KAAA,OAAA,CAAX,CAAwB,KAAA,GAAxB,EAAwB,GAAxB,CAAJ;;UACE,MAAA,KAAW,W,EAAa;AACzB,eAAA,KAAA,WAAA,CAAA,KAAA,CAAA,WAAA,CAAA,CAAA,CAAA;AACF;AAAM,K,MACL;AACD,WAAA,MAAA,GAAA,IAAA;AAED;;QACE,OAAK,CAAG,MAAH,CAAL,KAAe,K,EAAA;AACf,WAAK,GAAL,GAAK,GAAL;AACD,WAAA,WAAA,CAAA,IAAA,CAAA,KAAA;AACF;AACH,GA1BI;;AAnB+C,SAAA,8BAAA;CAAA,C,UAAA,C","sourcesContent":["/** PURE_IMPORTS_START tslib,_Subscriber,_util_tryCatch,_util_errorObject PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nimport { tryCatch } from '../util/tryCatch';\nimport { errorObject } from '../util/errorObject';\nexport function distinctUntilChanged(compare, keySelector) {\n    return function (source) { return source.lift(new DistinctUntilChangedOperator(compare, keySelector)); };\n}\nvar DistinctUntilChangedOperator = /*@__PURE__*/ (function () {\n    function DistinctUntilChangedOperator(compare, keySelector) {\n        this.compare = compare;\n        this.keySelector = keySelector;\n    }\n    DistinctUntilChangedOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new DistinctUntilChangedSubscriber(subscriber, this.compare, this.keySelector));\n    };\n    return DistinctUntilChangedOperator;\n}());\nvar DistinctUntilChangedSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(DistinctUntilChangedSubscriber, _super);\n    function DistinctUntilChangedSubscriber(destination, compare, keySelector) {\n        var _this = _super.call(this, destination) || this;\n        _this.keySelector = keySelector;\n        _this.hasKey = false;\n        if (typeof compare === 'function') {\n            _this.compare = compare;\n        }\n        return _this;\n    }\n    DistinctUntilChangedSubscriber.prototype.compare = function (x, y) {\n        return x === y;\n    };\n    DistinctUntilChangedSubscriber.prototype._next = function (value) {\n        var keySelector = this.keySelector;\n        var key = value;\n        if (keySelector) {\n            key = tryCatch(this.keySelector)(value);\n            if (key === errorObject) {\n                return this.destination.error(errorObject.e);\n            }\n        }\n        var result = false;\n        if (this.hasKey) {\n            result = tryCatch(this.compare)(this.key, key);\n            if (result === errorObject) {\n                return this.destination.error(errorObject.e);\n            }\n        }\n        else {\n            this.hasKey = true;\n        }\n        if (Boolean(result) === false) {\n            this.key = key;\n            this.destination.next(value);\n        }\n    };\n    return DistinctUntilChangedSubscriber;\n}(Subscriber));\n//# sourceMappingURL=distinctUntilChanged.js.map\n"]},"metadata":{},"sourceType":"module"}