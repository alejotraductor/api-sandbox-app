{"ast":null,"code":"export var DEFAULT_CVC_LENGTH = 3;\nexport var DEFAULT_ZIP_LENGTH = 5;\nexport var DEFAULT_CARD_FORMAT = /(\\d{1,4})/g;\nexport var CARD_TYPES = [{\n  displayName: \"Visa\",\n  type: \"visa\",\n  format: DEFAULT_CARD_FORMAT,\n  startPattern: /^4/,\n  gaps: [4, 8, 12],\n  lengths: [16, 18, 19],\n  code: {\n    name: \"CVV\",\n    length: 3\n  }\n}, {\n  displayName: \"Mastercard\",\n  type: \"mastercard\",\n  format: DEFAULT_CARD_FORMAT,\n  startPattern: /^(5[1-5]|677189)|^(222[1-9]|2[3-6]\\d{2}|27[0-1]\\d|2720)/,\n  gaps: [4, 8, 12],\n  lengths: [16],\n  code: {\n    name: \"CVC\",\n    length: 3\n  }\n}, {\n  displayName: \"American Express\",\n  type: \"amex\",\n  format: /(\\d{1,4})(\\d{1,6})?(\\d{1,5})?/,\n  startPattern: /^3[47]/,\n  gaps: [4, 10],\n  lengths: [15],\n  code: {\n    name: \"CID\",\n    length: 4\n  }\n}, {\n  displayName: \"Diners Club\",\n  type: \"dinersclub\",\n  format: DEFAULT_CARD_FORMAT,\n  startPattern: /^(36|38|30[0-5])/,\n  gaps: [4, 10],\n  lengths: [14, 16, 19],\n  code: {\n    name: \"CVV\",\n    length: 3\n  }\n}, {\n  displayName: \"Discover\",\n  type: \"discover\",\n  format: DEFAULT_CARD_FORMAT,\n  startPattern: /^(6011|65|64[4-9]|622)/,\n  gaps: [4, 8, 12],\n  lengths: [16, 19],\n  code: {\n    name: \"CID\",\n    length: 3\n  }\n}, {\n  displayName: \"JCB\",\n  type: \"jcb\",\n  format: DEFAULT_CARD_FORMAT,\n  startPattern: /^35/,\n  gaps: [4, 8, 12],\n  lengths: [16, 17, 18, 19],\n  code: {\n    name: \"CVV\",\n    length: 3\n  }\n}, {\n  displayName: \"UnionPay\",\n  type: \"unionpay\",\n  format: DEFAULT_CARD_FORMAT,\n  startPattern: /^62/,\n  gaps: [4, 8, 12],\n  lengths: [14, 15, 16, 17, 18, 19],\n  code: {\n    name: \"CVN\",\n    length: 3\n  }\n}, {\n  displayName: \"Maestro\",\n  type: \"maestro\",\n  format: DEFAULT_CARD_FORMAT,\n  startPattern: /^(5018|5020|5038|6304|6703|6708|6759|676[1-3])/,\n  gaps: [4, 8, 12],\n  lengths: [12, 13, 14, 15, 16, 17, 18, 19],\n  code: {\n    name: \"CVC\",\n    length: 3\n  }\n}, {\n  displayName: \"Elo\",\n  type: \"elo\",\n  format: DEFAULT_CARD_FORMAT,\n  startPattern: /^(4011(78|79)|43(1274|8935)|45(1416|7393|763(1|2))|50(4175|6699|67[0-7][0-9]|9000)|627780|63(6297|6368)|650(03([^4])|04([0-9])|05(0|1)|4(0[5-9]|3[0-9]|8[5-9]|9[0-9])|5([0-2][0-9]|3[0-8])|9([2-6][0-9]|7[0-8])|541|700|720|901)|651652|655000|655021)/,\n  gaps: [4, 8, 12],\n  lengths: [16],\n  code: {\n    name: \"CVE\",\n    length: 3\n  }\n}, {\n  displayName: \"Hipercard\",\n  type: \"hipercard\",\n  format: DEFAULT_CARD_FORMAT,\n  startPattern: /^(384100|384140|384160|606282|637095|637568|60(?!11))/,\n  gaps: [4, 8, 12],\n  lengths: [16],\n  code: {\n    name: \"CVC\",\n    length: 3\n  }\n}];\nexport var getCardTypeByValue = function getCardTypeByValue(value) {\n  return CARD_TYPES.filter(function (cardType) {\n    return cardType.startPattern.test(value);\n  })[0];\n};\nexport var getCardTypeByType = function getCardTypeByType(type) {\n  return CARD_TYPES.filter(function (cardType) {\n    return cardType.type === type;\n  })[0];\n};","map":{"version":3,"sources":["/Users/annaortega/Documents/workspace/api-sandbox-app/src/utils/cardTypes.ts"],"names":["DEFAULT_CVC_LENGTH","DEFAULT_ZIP_LENGTH","DEFAULT_CARD_FORMAT","CARD_TYPES","displayName","type","format","startPattern","gaps","lengths","code","name","length","getCardTypeByValue","value","filter","cardType","test","getCardTypeByType"],"mappings":"AAAA,OAAO,IAAMA,kBAAkB,GAAG,CAA3B;AACP,OAAO,IAAMC,kBAAkB,GAAG,CAA3B;AACP,OAAO,IAAMC,mBAAmB,GAAG,YAA5B;AACP,OAAO,IAAMC,UAAU,GAAG,CACxB;AACEC,EAAAA,WAAW,EAAE,MADf;AAEEC,EAAAA,IAAI,EAAE,MAFR;AAGEC,EAAAA,MAAM,EAAEJ,mBAHV;AAIEK,EAAAA,YAAY,EAAE,IAJhB;AAKEC,EAAAA,IAAI,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,EAAP,CALR;AAMEC,EAAAA,OAAO,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,CANX;AAOEC,EAAAA,IAAI,EAAE;AACJC,IAAAA,IAAI,EAAE,KADF;AAEJC,IAAAA,MAAM,EAAE;AAFJ;AAPR,CADwB,EAaxB;AACER,EAAAA,WAAW,EAAE,YADf;AAEEC,EAAAA,IAAI,EAAE,YAFR;AAGEC,EAAAA,MAAM,EAAEJ,mBAHV;AAIEK,EAAAA,YAAY,EAAE,yDAJhB;AAKEC,EAAAA,IAAI,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,EAAP,CALR;AAMEC,EAAAA,OAAO,EAAE,CAAC,EAAD,CANX;AAOEC,EAAAA,IAAI,EAAE;AACJC,IAAAA,IAAI,EAAE,KADF;AAEJC,IAAAA,MAAM,EAAE;AAFJ;AAPR,CAbwB,EAyBxB;AACER,EAAAA,WAAW,EAAE,kBADf;AAEEC,EAAAA,IAAI,EAAE,MAFR;AAGEC,EAAAA,MAAM,EAAE,+BAHV;AAIEC,EAAAA,YAAY,EAAE,QAJhB;AAKEC,EAAAA,IAAI,EAAE,CAAC,CAAD,EAAI,EAAJ,CALR;AAMEC,EAAAA,OAAO,EAAE,CAAC,EAAD,CANX;AAOEC,EAAAA,IAAI,EAAE;AACJC,IAAAA,IAAI,EAAE,KADF;AAEJC,IAAAA,MAAM,EAAE;AAFJ;AAPR,CAzBwB,EAqCxB;AACER,EAAAA,WAAW,EAAE,aADf;AAEEC,EAAAA,IAAI,EAAE,YAFR;AAGEC,EAAAA,MAAM,EAAEJ,mBAHV;AAIEK,EAAAA,YAAY,EAAE,kBAJhB;AAKEC,EAAAA,IAAI,EAAE,CAAC,CAAD,EAAI,EAAJ,CALR;AAMEC,EAAAA,OAAO,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,CANX;AAOEC,EAAAA,IAAI,EAAE;AACJC,IAAAA,IAAI,EAAE,KADF;AAEJC,IAAAA,MAAM,EAAE;AAFJ;AAPR,CArCwB,EAiDxB;AACER,EAAAA,WAAW,EAAE,UADf;AAEEC,EAAAA,IAAI,EAAE,UAFR;AAGEC,EAAAA,MAAM,EAAEJ,mBAHV;AAIEK,EAAAA,YAAY,EAAE,wBAJhB;AAKEC,EAAAA,IAAI,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,EAAP,CALR;AAMEC,EAAAA,OAAO,EAAE,CAAC,EAAD,EAAK,EAAL,CANX;AAOEC,EAAAA,IAAI,EAAE;AACJC,IAAAA,IAAI,EAAE,KADF;AAEJC,IAAAA,MAAM,EAAE;AAFJ;AAPR,CAjDwB,EA6DxB;AACER,EAAAA,WAAW,EAAE,KADf;AAEEC,EAAAA,IAAI,EAAE,KAFR;AAGEC,EAAAA,MAAM,EAAEJ,mBAHV;AAIEK,EAAAA,YAAY,EAAE,KAJhB;AAKEC,EAAAA,IAAI,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,EAAP,CALR;AAMEC,EAAAA,OAAO,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,CANX;AAOEC,EAAAA,IAAI,EAAE;AACJC,IAAAA,IAAI,EAAE,KADF;AAEJC,IAAAA,MAAM,EAAE;AAFJ;AAPR,CA7DwB,EAyExB;AACER,EAAAA,WAAW,EAAE,UADf;AAEEC,EAAAA,IAAI,EAAE,UAFR;AAGEC,EAAAA,MAAM,EAAEJ,mBAHV;AAIEK,EAAAA,YAAY,EAAE,KAJhB;AAKEC,EAAAA,IAAI,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,EAAP,CALR;AAMEC,EAAAA,OAAO,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,EAAjB,EAAqB,EAArB,CANX;AAOEC,EAAAA,IAAI,EAAE;AACJC,IAAAA,IAAI,EAAE,KADF;AAEJC,IAAAA,MAAM,EAAE;AAFJ;AAPR,CAzEwB,EAqFxB;AACER,EAAAA,WAAW,EAAE,SADf;AAEEC,EAAAA,IAAI,EAAE,SAFR;AAGEC,EAAAA,MAAM,EAAEJ,mBAHV;AAIEK,EAAAA,YAAY,EAAE,gDAJhB;AAKEC,EAAAA,IAAI,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,EAAP,CALR;AAMEC,EAAAA,OAAO,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,EAAjB,EAAqB,EAArB,EAAyB,EAAzB,EAA6B,EAA7B,CANX;AAOEC,EAAAA,IAAI,EAAE;AACJC,IAAAA,IAAI,EAAE,KADF;AAEJC,IAAAA,MAAM,EAAE;AAFJ;AAPR,CArFwB,EAiGxB;AACER,EAAAA,WAAW,EAAE,KADf;AAEEC,EAAAA,IAAI,EAAE,KAFR;AAGEC,EAAAA,MAAM,EAAEJ,mBAHV;AAIEK,EAAAA,YAAY,EAAE,wPAJhB;AAKEC,EAAAA,IAAI,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,EAAP,CALR;AAMEC,EAAAA,OAAO,EAAE,CAAC,EAAD,CANX;AAOEC,EAAAA,IAAI,EAAE;AACJC,IAAAA,IAAI,EAAE,KADF;AAEJC,IAAAA,MAAM,EAAE;AAFJ;AAPR,CAjGwB,EA6GxB;AACER,EAAAA,WAAW,EAAE,WADf;AAEEC,EAAAA,IAAI,EAAE,WAFR;AAGEC,EAAAA,MAAM,EAAEJ,mBAHV;AAIEK,EAAAA,YAAY,EAAE,uDAJhB;AAKEC,EAAAA,IAAI,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,EAAP,CALR;AAMEC,EAAAA,OAAO,EAAE,CAAC,EAAD,CANX;AAOEC,EAAAA,IAAI,EAAE;AACJC,IAAAA,IAAI,EAAE,KADF;AAEJC,IAAAA,MAAM,EAAE;AAFJ;AAPR,CA7GwB,CAAnB;AA2HP,OAAO,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,KAAD;AAAA,SAChCX,UAAU,CAACY,MAAX,CAAkB,UAACC,QAAD;AAAA,WAAcA,QAAQ,CAACT,YAAT,CAAsBU,IAAtB,CAA2BH,KAA3B,CAAd;AAAA,GAAlB,EAAmE,CAAnE,CADgC;AAAA,CAA3B;AAEP,OAAO,IAAMI,iBAAiB,GAAG,SAApBA,iBAAoB,CAACb,IAAD;AAAA,SAC/BF,UAAU,CAACY,MAAX,CAAkB,UAACC,QAAD;AAAA,WAAcA,QAAQ,CAACX,IAAT,KAAkBA,IAAhC;AAAA,GAAlB,EAAwD,CAAxD,CAD+B;AAAA,CAA1B","sourcesContent":["export const DEFAULT_CVC_LENGTH = 3;\nexport const DEFAULT_ZIP_LENGTH = 5;\nexport const DEFAULT_CARD_FORMAT = /(\\d{1,4})/g;\nexport const CARD_TYPES = [\n  {\n    displayName: \"Visa\",\n    type: \"visa\",\n    format: DEFAULT_CARD_FORMAT,\n    startPattern: /^4/,\n    gaps: [4, 8, 12],\n    lengths: [16, 18, 19],\n    code: {\n      name: \"CVV\",\n      length: 3\n    }\n  },\n  {\n    displayName: \"Mastercard\",\n    type: \"mastercard\",\n    format: DEFAULT_CARD_FORMAT,\n    startPattern: /^(5[1-5]|677189)|^(222[1-9]|2[3-6]\\d{2}|27[0-1]\\d|2720)/,\n    gaps: [4, 8, 12],\n    lengths: [16],\n    code: {\n      name: \"CVC\",\n      length: 3\n    }\n  },\n  {\n    displayName: \"American Express\",\n    type: \"amex\",\n    format: /(\\d{1,4})(\\d{1,6})?(\\d{1,5})?/,\n    startPattern: /^3[47]/,\n    gaps: [4, 10],\n    lengths: [15],\n    code: {\n      name: \"CID\",\n      length: 4\n    }\n  },\n  {\n    displayName: \"Diners Club\",\n    type: \"dinersclub\",\n    format: DEFAULT_CARD_FORMAT,\n    startPattern: /^(36|38|30[0-5])/,\n    gaps: [4, 10],\n    lengths: [14, 16, 19],\n    code: {\n      name: \"CVV\",\n      length: 3\n    }\n  },\n  {\n    displayName: \"Discover\",\n    type: \"discover\",\n    format: DEFAULT_CARD_FORMAT,\n    startPattern: /^(6011|65|64[4-9]|622)/,\n    gaps: [4, 8, 12],\n    lengths: [16, 19],\n    code: {\n      name: \"CID\",\n      length: 3\n    }\n  },\n  {\n    displayName: \"JCB\",\n    type: \"jcb\",\n    format: DEFAULT_CARD_FORMAT,\n    startPattern: /^35/,\n    gaps: [4, 8, 12],\n    lengths: [16, 17, 18, 19],\n    code: {\n      name: \"CVV\",\n      length: 3\n    }\n  },\n  {\n    displayName: \"UnionPay\",\n    type: \"unionpay\",\n    format: DEFAULT_CARD_FORMAT,\n    startPattern: /^62/,\n    gaps: [4, 8, 12],\n    lengths: [14, 15, 16, 17, 18, 19],\n    code: {\n      name: \"CVN\",\n      length: 3\n    }\n  },\n  {\n    displayName: \"Maestro\",\n    type: \"maestro\",\n    format: DEFAULT_CARD_FORMAT,\n    startPattern: /^(5018|5020|5038|6304|6703|6708|6759|676[1-3])/,\n    gaps: [4, 8, 12],\n    lengths: [12, 13, 14, 15, 16, 17, 18, 19],\n    code: {\n      name: \"CVC\",\n      length: 3\n    }\n  },\n  {\n    displayName: \"Elo\",\n    type: \"elo\",\n    format: DEFAULT_CARD_FORMAT,\n    startPattern: /^(4011(78|79)|43(1274|8935)|45(1416|7393|763(1|2))|50(4175|6699|67[0-7][0-9]|9000)|627780|63(6297|6368)|650(03([^4])|04([0-9])|05(0|1)|4(0[5-9]|3[0-9]|8[5-9]|9[0-9])|5([0-2][0-9]|3[0-8])|9([2-6][0-9]|7[0-8])|541|700|720|901)|651652|655000|655021)/,\n    gaps: [4, 8, 12],\n    lengths: [16],\n    code: {\n      name: \"CVE\",\n      length: 3\n    }\n  },\n  {\n    displayName: \"Hipercard\",\n    type: \"hipercard\",\n    format: DEFAULT_CARD_FORMAT,\n    startPattern: /^(384100|384140|384160|606282|637095|637568|60(?!11))/,\n    gaps: [4, 8, 12],\n    lengths: [16],\n    code: {\n      name: \"CVC\",\n      length: 3\n    }\n  }\n];\n\nexport const getCardTypeByValue = (value: string) =>\n  CARD_TYPES.filter((cardType) => cardType.startPattern.test(value))[0];\nexport const getCardTypeByType = (type: string) =>\n  CARD_TYPES.filter((cardType) => cardType.type === type)[0];\n"]},"metadata":{},"sourceType":"module"}