{"ast":null,"code":"/** PURE_IMPORTS_START tslib,_OuterSubscriber,_util_subscribeToResult,_map,_observable_from PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { map } from './map';\nimport { from } from '../observable/from';\nexport function exhaustMap(project, resultSelector) {\n  if (resultSelector) {\n    return function (source) {\n      return source.pipe(exhaustMap(function (a, i) {\n        return from(project(a, i)).pipe(map(function (b, ii) {\n          return resultSelector(a, b, i, ii);\n        }));\n      }));\n    };\n  }\n\n  return function (source) {\n    return source.lift(new ExhauseMapOperator(project));\n  };\n}\n\nvar ExhauseMapOperator = /*@__PURE__*/function () {\n  function ExhauseMapOperator(project) {\n    this.project = project;\n  }\n\n  ExhauseMapOperator.prototype.call = function (subscriber, source) {\n    return source.subscribe(new ExhaustMapSubscriber(subscriber, this.project));\n  };\n\n  return ExhauseMapOperator;\n}();\n\nvar ExhaustMapSubscriber = /*@__PURE__*/function (_super) {\n  tslib_1.__extends(ExhaustMapSubscriber, _super);\n\n  function ExhaustMapSubscriber(destination, project) {\n    var _this = _super.call(this, destination) || this;\n\n    _this.project = project;\n    _this.hasSubscription = false;\n    _this.hasCompleted = false;\n    _this.index = 0;\n    return _this;\n  }\n\n  ExhaustMapSubscriber.prototype._next = function (value) {\n    if (!this.hasSubscription) {\n      this.tryNext(value);\n    }\n  };\n\n  ExhaustMapSubscriber.prototype.tryNext = function (value) {\n    var index = this.index++;\n    var destination = this.destination;\n\n    try {\n      var result = this.project(value, index);\n      this.hasSubscription = true;\n      this.add(subscribeToResult(this, result, value, index));\n    } catch (err) {\n      destination.error(err);\n    }\n  };\n\n  ExhaustMapSubscriber.prototype._complete = function () {\n    this.hasCompleted = true;\n\n    if (!this.hasSubscription) {\n      this.destination.complete();\n    }\n  };\n\n  ExhaustMapSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n    this.destination.next(innerValue);\n  };\n\n  ExhaustMapSubscriber.prototype.notifyError = function (err) {\n    this.destination.error(err);\n  };\n\n  ExhaustMapSubscriber.prototype.notifyComplete = function (innerSub) {\n    this.remove(innerSub);\n    this.hasSubscription = false;\n\n    if (this.hasCompleted) {\n      this.destination.complete();\n    }\n  };\n\n  return ExhaustMapSubscriber;\n}(OuterSubscriber);","map":{"version":3,"sources":["../../../src/internal/operators/exhaustMap.ts"],"names":[],"mappings":"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","sourcesContent":["/** PURE_IMPORTS_START tslib,_OuterSubscriber,_util_subscribeToResult,_map,_observable_from PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { map } from './map';\nimport { from } from '../observable/from';\nexport function exhaustMap(project, resultSelector) {\n    if (resultSelector) {\n        return function (source) { return source.pipe(exhaustMap(function (a, i) { return from(project(a, i)).pipe(map(function (b, ii) { return resultSelector(a, b, i, ii); })); })); };\n    }\n    return function (source) {\n        return source.lift(new ExhauseMapOperator(project));\n    };\n}\nvar ExhauseMapOperator = /*@__PURE__*/ (function () {\n    function ExhauseMapOperator(project) {\n        this.project = project;\n    }\n    ExhauseMapOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new ExhaustMapSubscriber(subscriber, this.project));\n    };\n    return ExhauseMapOperator;\n}());\nvar ExhaustMapSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(ExhaustMapSubscriber, _super);\n    function ExhaustMapSubscriber(destination, project) {\n        var _this = _super.call(this, destination) || this;\n        _this.project = project;\n        _this.hasSubscription = false;\n        _this.hasCompleted = false;\n        _this.index = 0;\n        return _this;\n    }\n    ExhaustMapSubscriber.prototype._next = function (value) {\n        if (!this.hasSubscription) {\n            this.tryNext(value);\n        }\n    };\n    ExhaustMapSubscriber.prototype.tryNext = function (value) {\n        var index = this.index++;\n        var destination = this.destination;\n        try {\n            var result = this.project(value, index);\n            this.hasSubscription = true;\n            this.add(subscribeToResult(this, result, value, index));\n        }\n        catch (err) {\n            destination.error(err);\n        }\n    };\n    ExhaustMapSubscriber.prototype._complete = function () {\n        this.hasCompleted = true;\n        if (!this.hasSubscription) {\n            this.destination.complete();\n        }\n    };\n    ExhaustMapSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.destination.next(innerValue);\n    };\n    ExhaustMapSubscriber.prototype.notifyError = function (err) {\n        this.destination.error(err);\n    };\n    ExhaustMapSubscriber.prototype.notifyComplete = function (innerSub) {\n        this.remove(innerSub);\n        this.hasSubscription = false;\n        if (this.hasCompleted) {\n            this.destination.complete();\n        }\n    };\n    return ExhaustMapSubscriber;\n}(OuterSubscriber));\n//# sourceMappingURL=exhaustMap.js.map\n"]},"metadata":{},"sourceType":"module"}